<!-- jQuery first, then Popper.js, then Bootstrap JS -->
<script src="https://code.jquery.com/jquery-3.3.1.slim.min.js" integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo" crossorigin="anonymous"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js" integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1" crossorigin="anonymous"></script>
<script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js" integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM" crossorigin="anonymous"></script>

<!-- Optional JavaScript -->
<script type="text/javascript">
$(function() {
  var pathname = $(location).attr('pathname');
  switch (pathname) {
    case '/':
      $('#page_home').addClass('active');
      break;
    case '/dashboard':
      $('#page_dashboard').addClass('active');
      break;
    default:
      $('#page_home').addClass('active');
      break;
  }
});

class HelperToolsClass {
    constructor() {
        this.version = '0.0.1';
    }

    static btnDebounce(_ele, time_ms=1000) {
        let _this = $(_ele);
        _this.attr("disabled", true);
        setTimeout(function() { _this.attr("disabled", false); }, time_ms);
    }

    static debounce(func, wait, immediate) {
      var timeout;
      return function() {
        var context = this, args = arguments;
        var later = function() {
          timeout = null;
          if (!immediate) func.apply(context, args);
        };
        var callNow = immediate && !timeout;
        clearTimeout(timeout);
        timeout = setTimeout(later, wait);
        if (callNow) func.apply(context, args);
      };
    };

    static debounceFirst(func, delay) {
      var timer = 0;
      return function debouncedFn() {
        if (Date.now() - timer > delay) {
          func();
        }
        timer = Date.now();
      };
    }

    static isNumberKey(e) {
      var charCode = (e.which) ? e.which : e.keyCode;
      if (charCode < 48 || charCode > 57) {
        e.preventDefault();
        return false;
      }
      return true;
    }

    /**
     *  escapeTags for JavaScript
     */
    static escapeTags(str) {
      return str.replace(/&/g,'&amp;').replace(/</g,'&lt;').replace(/>/g,'&gt;') ;
    }
};

</script>