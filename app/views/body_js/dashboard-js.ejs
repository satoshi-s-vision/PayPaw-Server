<script type="text/javascript">
$(function() {
  const AUTO_LOAD_INTERVAL = 2000; // ms
  let item_per_page = 10;
  let current_offset = 0;
  let current_page = 0;

  let autoLoad = setInterval(autoLoadFn, AUTO_LOAD_INTERVAL);

  // run once for page load (init)
  autoLoadFn()
  // init load user profile
  getMyProfile()
  // get balance
  getMyBalance()

  $('#bills-prev-page').on('click', loadPrevBillsPage)
  $('#bills-next-page').on('click', loadNextBillsPage)
  $('#autoUpdateSwitch').on('change', autoUpdateSwitchFn);

  // ------------------ Functions -----------------
  function autoUpdateSwitchFn () {
    let checked = $(this).prop("checked");
    if (checked) {
      autoLoad = setInterval(autoLoadFn, AUTO_LOAD_INTERVAL);
    } else {
      clearInterval(autoLoad);
    }
  }

  function autoLoadFn () {
    loadBills(item_per_page, current_offset, current_page, 'DESC');
  }

  function loadPrevBillsPage () {
    if (current_page > 0) {
      current_page--;
      current_offset = item_per_page * current_page;
    }
    loadBills(item_per_page, current_offset, current_page, 'DESC');
  }

  function loadNextBillsPage () {
    current_page++;
    current_offset = item_per_page * current_page;
    loadBills(item_per_page, current_offset, current_page, 'DESC');
  }

  function displayBills(bills) {
    let bills_html = '';
    bills.forEach(function(b) {

      let [status_name, status_type] = statusName(b.status, b.bill_age)

      let info_html = '';
      let info_arr = [
        ['Email', b.email],
        ['Amount', `${b.currency_amount} ${b.currency}`],
        ['Created', `${calTimeAgo(b.bill_age)}`],
      ]

      info_arr.forEach(function(item, index) {
        let odd = index % 4;
        let last_item = info_arr.length == (index - 1);

        if (index == 0) info_html += '<div class="row">';
        else if (!odd) info_html += '</div><div class="row">';

        info_html += `
          <div class="col col-md-6 col-lg-3">
            <span class="form-control-plaintext"><b>${item[0]}:</b> ${item[1]}</span>
          </div>
        `;

        if (last_item) info_html += '</div>';
      })

      bills_html += `
        <div class="card">
          <div class="card-header h5">
            ID: ${b.id} <span class="float-right badge badge-${status_type}">${status_name}</span>
          </div>
          <div class="card-body">
            <div class="row">
              <div class="col-12 col-lg-4">
                <span class="form-control-plaintext"><b>Email:</b> ${b.email}</span>
              </div>
              <div class="col-12 col-lg-4">
                <span class="form-control-plaintext"><b>Amount:</b> ${b.currency_amount} ${b.currency}</span>
              </div>
              <div class="col-12 col-lg-4">
                <span class="form-control-plaintext"><b>Created:</b> ${calTimeAgo(b.bill_age)}</span>
              </div>
            </div>

            <div class="row">
              <div class="col">
                <span class="form-control-plaintext"><b>Message:</b> ${b.message}</span>
              </div>
            </div>

          </div>
        </div>
        <br>
      `;
    });
    $('#bills-box').html(bills_html);
  }

  function statusName(status = 0, bill_age = 0) {
    /*
      Expired: warning
      Paid:  success
      Pending: primary
    */
    let m = {
      'Paid': 'success',
      'Pending': 'primary',
      'Expired': 'warning',
    }
    let res = 'Expired';
    if (status == 1) {
      res = 'Paid';
    } else if (status == 0 && bill_age < 600) {
      res = 'Pending';
    }
    return [res, m[res]]
  }

  function calTimeAgo (ts) {
    const diffDays = Math.floor(ts / 86400); // days
    const diffHrs = Math.floor((ts % 86400) / 3600); // hours
    const diffMins = Math.round(((ts % 86400) % 3600) / 60); // minutes
    const diffSecs = Math.round(((ts % 86400) % 3600)); // seconds
    let res = "N/A";
    if (diffDays > 0) {
      if (diffDays == 1) return `one day ago`;
      else return `${diffDays} days ago`
    }
    if (diffHrs > 0) {
      if (diffHrs == 1) return `an hour ago`;
      else return `${diffHrs} hours ago`
    }
    if (diffMins > 0) {
      if (diffMins == 1) return `one minute ago`;
      else return `${diffMins} minutes ago`
    }
    if (diffSecs > 0) {
      if (diffSecs == 1) return `one second ago`;
      else return `${diffSecs} seconds ago`
    }
  }

  function updateBillsPageNum () {
    $('#bills-page-number').text(`${current_page + 1}`);
  }

  // ------------------ Ajax call -----------------
  /**
   * Ajax, call server to get bills
   */
  async function loadBills(
    limit = 20,
    offset = 0,
    curr_page = 0,
    order = 'DESC',
  ) {
    $('#autoUpdateSpinner').show();

    const params = `order=${order}&limit=${limit}&offset=${offset}`
    const res = await fetch(
      `/api/v1/bills?${params}`,
      {
        method: "GET"
      }
    ).then(response => response.json());

    if (res && res.meta && (res.meta.total > 0 || res.data !== null)) {
      // obj returned instead of array
      res.data = res.data.length === undefined ? [res.data] : res.data;

      displayBills(res.data);
      updateBillsPageNum(curr_page);
      setTimeout(() => {
        $('#autoUpdateSpinner').hide();
      }, 500);
    } else {
      alert(`Status Code ${res.meta.code} : ${res.meta.msg}`);
    }
  };

  async function getMyProfile() {
    const res = await fetch(
      `/api/v1/user/me`,
      {
        method: "GET"
      }
    ).then(response => response.json());

    if (res && res.meta && res.meta.code == 200) {
      let d = res.data;
      $('#welcome-user-name').text(`Welcome, ${d.first_name} ${d.last_name} üêæ (ID: ${d.id})`);
      $('#welcome-org-name').text(`üè¶ ${d.recipient_name}`);
      $('#nav-profile').html(`
        <div class="form-group row">
          <label class="col-sm-3 col-form-label"><b>Recipient ID:</b></label>
          <label class="col-sm-9 col-form-label">${d.id}</label>
        </div>
        <div class="form-group row">
          <label class="col-sm-3 col-form-label"><b>Recipient name:</b></label>
          <label class="col-sm-9 col-form-label">${d.recipient_name}</label>
        </div>
        <div class="form-group row">
          <label class="col-sm-3 col-form-label"><b>Recipient wallet address:</b></label>
          <label class="col-sm-9 col-form-label">${d.recipient_wallet_address}</label>
        </div>
        <div class="form-group row">
          <label class="col-sm-3 col-form-label"><b>Full name:</b></label>
          <label class="col-sm-9 col-form-label">${d.first_name} ${d.last_name}</label>
        </div>
        <div class="form-group row">
          <label class="col-sm-3 col-form-label"><b>Email:</b></label>
          <label class="col-sm-9 col-form-label">${d.email}</label>
        </div>
        <div class="form-group row">
          <label class="col-sm-3 col-form-label"><b>Phone:</b></label>
          <label class="col-sm-9 col-form-label">${d.phone}</label>
        </div>
        <div class="form-group row">
          <label class="col-sm-3 col-form-label"><b>Access token:</b></label>
          <label class="col-sm-9 col-form-label">${d.access_token}</label>
        </div>
        <div class="form-group row">
          <label class="col-sm-3 col-form-label"><b>Updated at:</b></label>
          <label class="col-sm-9 col-form-label">${new Date(d.updated_at)}</label>
        </div>
        <div class="form-group row">
          <label class="col-sm-3 col-form-label"><b>Created at:</b></label>
          <label class="col-sm-9 col-form-label">${new Date(d.created_at)}</label>
        </div>
      `);
    } else {
      alert(`Error: Can't load profile. Status Code ${res.meta.code} : ${res.meta.msg}`);
    }
  };

  async function getMyBalance() {
    const res = await fetch(
      `/api/v1/balance`,
      {
        method: "GET"
      }
    ).then(response => response.json());

    if (res && res.meta && res.meta.code == 200) {
      let balance = res.data;
      $('#nav-balance').html(`
        <div class="form-group row">
          <label class="col-sm-3 col-form-label"><b>Your balance:</b></label>
          <label class="col-sm-9 col-form-label">${balance} BTM</label>
        </div>
        <div class="form-group row">
          <label class="col-sm-3 col-form-label"><b>(Feature coming soon):</b></label>
          <label class="col-sm-9 col-form-label"><button class="btn btn-info" disabled>Payout balance</button></label>
        </div>
      `);
    } else {
      alert(`Error: Can't load balance. Status Code ${res.meta.code} : ${res.meta.msg}`);
    }
  };


});
</script>