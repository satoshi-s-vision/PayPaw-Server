<div class="container">
  <div class="form-row">
    <div class="col-md">
      <br>
      <h2><span style="color: Dodgerblue;"><i class="fas fa-money-check-alt"></i></span></i> Accept BTM/USD online</h2>
      <hr>
      <form class="needs-validation" novalidate>
        <div class="input-group mb-3">
          <div class="input-group-prepend">
            <span class="input-group-text checkout-input-label">Email</span>
          </div>
          <input type="email" class="form-control" id="checkoutEmail" placeholder="name@example.com (Your email for invoice)" required>
        </div>
        <div class="form-group">
          <div class="input-group mb-3">
            <div class="input-group-prepend">
              <label class="input-group-text checkout-input-label" for="inputGroupSelect01">Currency</label>
            </div>
            <select class="custom-select" id="checkoutCurrency" required>
              <h6 class="dropdown-header">Crypto</h6>
              <option value="BTM" selected>BTM</option>
              <div class="dropdown-divider"></div>
              <h6 class="dropdown-header">Fiat</h6>
              <option value="USD">USD</option>
              <option value="CAD">CAD</option>
              <option value="CNY">CNY</option>
              <option value="EUR">EUR</option>
            </select>
          </div>
        </div>
        <div class="input-group mb-3">
          <div class="input-group-prepend">
            <span class="input-group-text checkout-input-label">Amount</span>
          </div>
          <input type="text" class="form-control" id="checkoutAmount" aria-label="Amount" placeholder="666.66" required>
          <div class="invalid-feedback">
            Please provide amount.
          </div>
        </div>
        <div class="input-group mb-3">
          <div class="input-group-prepend">
            <span class="input-group-text checkout-input-label">Recipient ID</span>
          </div>
          <input type="text" class="form-control" id="checkoutRecipientId" aria-label="Recipient ID" placeholder="175" required>
        </div>
        <div class="form-group">
          <label for="exampleFormControlTextarea1">Message to recipient</label>
          <textarea class="form-control" id="checkoutMessage" rows="3"></textarea>
        </div>

        <button type="submit" class="btn btn-primary">Pay now</button>
      </form>
    </div>
    <div class="col-md">
        <div>Pay xxxx BTM</div>

        <div>Waiting for payment</div>

        <div id="qrcode"></div>

        <button type="button" class="el-button copy-address el-button--default">
        <span>Copy Address</span>
        </button></div><div class="el-row"><div style="margin-top: 10px;">
      </div>
    </div>
  </div>
</div>

<style>
.checkout-input-label {
  width: 110px;
}
</style>

<script type="text/javascript">
$(function() {

  let qrcode = new QRCode(document.getElementById("qrcode"), {
      text: "N/A",
      width: 200,
      height: 200,
      colorDark : "#000000",
      colorLight : "#ffffff",
      correctLevel : QRCode.CorrectLevel.H
  });

  window.addEventListener('load', function() {
    // Fetch all the forms we want to apply custom Bootstrap validation styles to
    let forms = document.getElementsByClassName('needs-validation');
    // Loop over them and prevent submission
    let validation = Array.prototype.filter.call(forms, function(form) {
      form.addEventListener('submit', function(event) {
        if (form.checkValidity() === true) {
          postOneBill();
        }
        form.classList.add('was-validated');
        event.preventDefault();
        event.stopPropagation();
      }, false);
    });
  }, false);

  /**
   * Ajax, call server to post one msg
   */
  async function postOneBill() {
    const checkoutRecipientId = document.querySelector('#checkoutRecipientId') && +document.querySelector('#checkoutRecipientId').value;
    const checkoutEmail = document.querySelector('#checkoutEmail') && document.querySelector('#checkoutEmail').value;
    const checkoutCurrency = document.querySelector('#checkoutCurrency') && document.querySelector('#checkoutCurrency').value;
    const checkoutAmount = document.querySelector('#checkoutAmount') && document.querySelector('#checkoutAmount').value;
    const checkoutMessage = document.querySelector('#checkoutMessage') && document.querySelector('#checkoutMessage').value;


    if (checkoutRecipientId && checkoutEmail && checkoutCurrency && checkoutAmount) {
      const res = await fetch(
        '/api/v1/bill',
        {
          method: "POST",
          headers: {
            'Accept': 'application/json',
            'Content-Type': 'application/json'
          },
          body: JSON.stringify({
            "data": {
              "user_id": checkoutRecipientId,
              "email": checkoutEmail,
              "currency": checkoutCurrency,
              "currency_amount": checkoutAmount,
              "message": checkoutMessage
            }
          })
        }
      ).then(response => response.json());
      console.log(res);
      if (res && res.meta && res.meta.code && res.meta.code == 201) {
        // reset
        document.querySelector('#checkoutEmail').value = '';
        document.querySelector('#checkoutRecipientId').value = '';
        document.querySelector('#checkoutAmount').value = '';
        document.querySelector('#checkoutMessage').value = '';

        document.getElementsByClassName('needs-validation')[0].classList.remove('was-validated');

        updateQR(res.data);

      } else {
        alert(`Status Code ${res.meta.code} : ${res.meta.msg}`);
      }
    } else {
      alert('Input not valid, check your input');
    }
  }

  function updateQR (data) {
    // bytom:[address]?amount=[amount]&asset=[asset]
    const q_data = {
      address: data.address,
      amount: +data.asset_amount,
      asset: data.asset_id,
    }
    qrcode.hidden = true;
    qrcode.makeCode(`bytom:${q_data.address}?amount=${q_data.amount}&asset=${q_data.asset}`); // make another code.
  }

});
</script>